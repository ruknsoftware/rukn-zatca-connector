
name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "**.css"
      - "**.js"
      - "**.md"
      - "**.html"
      - "**.csv"
  pull_request_review:
    types: [submitted, edited, dismissed]
  schedule:
    # Run everday at midnight UTC / 5:30 IST
    - cron: "0 0 * * *"

concurrency:
  group: develop-ksa_compliance-${{ github.event.pull_request.number || github.event.number }}
  cancel-in-progress: true

jobs:
  check-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_review'
    outputs:
      approved: ${{ steps.check-reviews.outputs.approved }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check Reviews
        uses: actions/github-script@v6
        id: check-reviews
        with:
          script: |
            const checkReviews = require('./.github/scripts/check-reviews.js');
            await checkReviews({ github, context, core });

  tests:
    runs-on: ubuntu-latest
    needs: check-review
    if: |
      github.event_name == 'push' || 
      ((github.event_name == 'pull_request' || github.event_name == 'pull_request_review') && needs.check-review.outputs.approved == 'true')
    strategy:
      fail-fast: false
    name: Server

    services:
      redis-cache:
        image: redis:alpine
        ports:
          - 13000:6379
      redis-queue:
        image: redis:alpine
        ports:
          - 11000:6379
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mariadb-admin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Find tests
        run: |
          echo "Finding tests"
          grep -rn "def test" > /dev/null

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT'

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install MariaDB Client
        run: sudo apt-get update && sudo apt-get install -y mariadb-client

      - name: Setup
        run: |
          pip install frappe-bench
          bench init --frappe-branch version-15 --skip-redis-config-generation --skip-assets --python "$(which python)" ~/frappe-bench
          mariadb --host 127.0.0.1 --port 3306 -u root -proot -e "SET GLOBAL character_set_server = 'utf8mb4'"
          mariadb --host 127.0.0.1 --port 3306 -u root -proot -e "SET GLOBAL collation_server = 'utf8mb4_unicode_ci'"

      - name: Install
        working-directory: /home/runner/frappe-bench
        run: |
          bench get-app ksa_compliance https://github.com/ruknsoftware/rukn-zatca-connector.git --branch develop
          bench setup requirements --dev
          bench new-site --db-root-password root --admin-password admin test_site
          bench get-app erpnext --branch version-15
          bench get-app payments --branch version-15
          bench --site test_site install-app erpnext
          bench --site test_site install-app payments
          bench --site test_site install-app ksa_compliance
          bench build
        env:
          CI: 'Yes'

      - name: Run Tests
        working-directory: /home/runner/frappe-bench
        run: |
          bench --site test_site set-config allow_tests true
          bench --site test_site run-tests --app ksa_compliance
        env:
          TYPE: server
